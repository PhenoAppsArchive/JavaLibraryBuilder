// USAGE:
// Run the command 'export JAVA_HOME="/Applications/Android Studio.app/Contents/jre/jdk/Contents/Home"'
// Run the command './gradlew :javalib:bintrayUpload'

apply plugin: 'java-library'
apply plugin: "maven-publish"
apply plugin: 'com.jfrog.bintray'

ext {
    okhttp_version = "2.7.5"
    threetenbp_version = "1.4.0"
    gson_version = "2.8.6"
    gsonfire_version = "1.8.3"
    javax_annotation_version = "1.3.2"
    swagger_annotations_version = "2.0.8"

    project_group = "org.phenoapps"
    project_name = "javalib"
    project_version = "1.0.2"
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    api 'junit:junit:4.12'

    api "com.squareup.okhttp:okhttp:${okhttp_version}"
    api "com.squareup.okhttp:logging-interceptor:${okhttp_version}"
    api "org.threeten:threetenbp:${threetenbp_version}"
    api "com.google.code.gson:gson:${gson_version}"
    api "io.gsonfire:gson-fire:${gsonfire_version}"
    api "javax.annotation:javax.annotation-api:${javax_annotation_version}"
    api "io.swagger.core.v3:swagger-annotations:${swagger_annotations_version}"
}

publishing.publications.all {
    pom.withXml {
        asNode().dependencies.'*'.findAll() {
            it.scope.text() == 'runtime' && project.configurations.compile.allDependencies.find { dep ->
                dep.name == it.artifactId.text()
            }
        }.each { it.scope*.value = 'compile'}
    }
}

publishing {
    publications {
        myPublication(MavenPublication) {
            from components.java
            groupId "${project_group}"
            artifactId "${project_name}"
            version "${project_version}"
            pom {
                name = "${project_name}"
                description = "${project_name}"
                url = "https://github.com/PhenoLibs/JavaLibraryBuilder"
                licenses {
                    license {
                        name = 'GNU General Public License version 2'
                        url = 'https://opensource.org/licenses/gpl-2.0.php'
                    }
                }
                scm {
                    url = "https://github.com/PhenoLibs/JavaLibraryBuilder"
                }
            }
        }
    }
}

bintray {
    user = getSeceret('bintray_user')
    key = getSeceret('bintray_api_key')
    publications = ['myPublication']
    pkg {
        userOrg = 'pheno-apps'
        repo = 'pheno-apps-java-client-library'
        name = "${project_group}:${project_name}"
        licenses = ['GPL-2.0']
        vcsUrl = 'https://github.com/PhenoLibs/JavaLibraryBuilder'

        version {
            name = "${project_version}"
            released  = new Date()
        }
    }
}

def getSeceret(key) {
    def Properties props = new Properties()
    props.load(new FileInputStream(new File('secrets.properties')))
    return props[key]
}
